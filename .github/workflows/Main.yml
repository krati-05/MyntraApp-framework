name: Main branch CI-CD

on:  
   push:
     branches: [ main ]

env:
  ARTIFACT_NAME: drop
  
jobs:  
   build:    
     runs-on: dotnet

     steps:
     
       - uses: actions/checkout@v2
       
       - name: Setup MSBuild
         uses: microsoft/setup-msbuild@v1

         
       - name: Setup NuGet.exe for use with actions
         uses: NuGet/setup-nuget@v2.0.0
         with:
          nuget-version: '5.x'

       - name: Setup VSTest
         uses: darenm/Setup-VSTest@v1

       - name: Restore Packages
         run: nuget restore Myntra/Myntra.sln
         working-directory: ${{ github.workspace }}


       - name: Build solution
         run: msbuild.exe Myntra/Myntra.sln /nologo /nr:false /p:DeployOnBuild=true /p:DeployDefaultTarget=WebPublish /p:WebPublishMethod=FileSystem /p:DeleteExistingFiles=True /p:platform="Any CPU" /p:configuration="Release" /p:PublishUrl="../_build"

         working-directory: ${{ github.workspace }}


       - name: Run Tests
         run: vstest.console.exe .\Myntra.Tests\bin\Release\Myntra.Tests.dll
         
       - name: Upload a Build Artifact
         uses: actions/upload-artifact@v4.6.2
         with:
          name: EZRepBundle
          path: "./_build"

          
   deploy:
    name: Deploy to Azure VM
    runs-on: dotnet
    needs: build
    environment:
      name: Main
      
    steps:
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: drop

      - name: Deploy via PowerShell to Azure VM
        shell: powershell
        run: |
          $securePassword = ConvertTo-SecureString "${{ secrets.AZURE_VM_PASSWORD }}" -AsPlainText -Force
          $cred = New-Object System.Management.Automation.PSCredential("${{ secrets.AZURE_VM_USERNAME }}", $securePassword)

          $session = New-PSSession -ComputerName "${{ secrets.AZURE_VM_HOST }}" -Credential $cred -UseSSL -SessionOption (New-PSSessionOption -SkipCACheck -SkipCNCheck)

          Copy-Item -Path "./drop/*" -Destination "C:\inetpub\wwwroot\MyntraApp" -Recurse -ToSession $session

          Invoke-Command -Session $session -ScriptBlock {
            Import-Module WebAdministration
            Restart-WebAppPool -Name 'MyntraAppPool'
          }

          Remove-PSSession $session
